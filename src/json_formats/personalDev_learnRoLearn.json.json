{
    "preRequisites": "No Pre-requisites, this curriculum assumes that you have minimal experience with computer programming but in case you have some experience with it, you can skip the basic parts as per your convenience.",
    "approver": "Conan O. Brien ( Jack at trades International )",
    "contactApprover": "https://calendly.com/neeleshsharma/30min",
    "title": "Learning How To Learn",
    "banner": "https://cdn.pixabay.com/photo/2019/04/01/22/23/risk-4096581_1280.jpg",
    "description": "Know the learning techniques used by experts in art, music, literature, science, sports, and many other disciplines.",
    "duration": "12 weeks",
    "contributors": "",
    "topics": [
        {
            "title": "What is a Resource and a URL",
            "urls": [
                {
                    "title": "Understanding URLs ( video )",
                    "url": "https://www.youtube.com/embed/5Jr-_Za5yQM",
                    "expectedContent": ""
                },
                {
                    "title": "What is a URL",
                    "url": "https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL"
                },
                {
                    "title": "Components of URL",
                    "url": "https://www.ibm.com/docs/en/cics-ts/5.1?topic=concepts-components-url"
                }
            ],
            "optionalUrls": [
                {
                    "title": "URLs and URIs",
                    "url": "https://danielmiessler.com/study/difference-between-uri-url/"
                }
            ],
            "guidelinesForUrls": "A resource on the internet is any type of digital content or information that can be accessed through the World Wide Web or other internet-based technologies. This can include websites, web pages, images, videos, audio files, documents, applications, and other forms of digital media.",
            "knowledgeCheck": [
                {
                    "question": "What does URL stand for?",
                    "answer": " Unique Resource Locator"
                },
                {
                    "question": "What is the purpose of a URL?",
                    "answer": "To identify a website or web page on the internet."
                },
                {
                    "question": "What are the three main components of a URL?",
                    "answer": " Protocol, domain name, file path and query"
                },
                {
                    "question": "What is the protocol in a URL?",
                    "answer": "The communication protocol used to transfer data over the internet."
                }
            ]
        },
        {
            "title": "The Internet",
            "urls": [
                {
                    "title": "How Internet Works ( video )",
                    "url": "https://www.youtube.com/embed/7_LPdttKXPc"
                },
                {
                    "title": "HTTP and HTML ( video )",
                    "url": "https://www.youtube.com/embed/kBXQZMmiA4s"
                }
            ],
            "optionalUrls": [],
            "guidelinesForUrls": "Fundamental understanding of how internet works in necessary before we begin learning about tools to build web apps, the resources attached in this section will help you for the same, stay open to ideas!",
            "knowledgeCheck": [
                {
                    "question": "What is internet in simple terms?",
                    "answer": "A global network of interconnected computers"
                },
                {
                    "question": "What is an IP address?",
                    "answer": "An IP address is a unique numerical identifier assigned to each device connected to a computer network that uses the Internet Protocol (IP) for communication. It is a string of numbers separated by dots, such as 192.168.1.1"
                }
            ]
        },
        {
            "title": "Server-Client Architecture",
            "urls": [
                {
                    "title": "The server-client model ( vedio )",
                    "url": "https://www.youtube.com/embed/-dSXvLAwXO0"
                }
            ],
            "optionalUrls": [],
            "guidelinesForUrls": "Server-client architecture is a model for computer networking where a central server provides services to multiple clients connected to the network.",
            "knowledgeCheck": [
                {
                    "question": "What is the role of the server in a server-client model?",
                    "answer": "The server provides services, resources, and data to multiple clients connected to the network. It manages and controls access to these resources, and ensures that they are available to clients as needed."
                },
                {
                    "question": "What is the role of the client in a server-client model?",
                    "answer": "The client requests services, resources, and data from the server, and interacts with them using a user interface or application. It sends requests to the server, and receives responses back from it, an example of a client is a Web Browser like Chrome / Safari / Firefox etc."
                },
                {
                    "question": "What are some examples of server-client applications?",
                    "answer": "Email clients, web browsers, instant messaging apps, online games, file transfer applications, and remote desktop software are all examples of server-client applications."
                }
            ]
        },
        {
            "title": "Web Browsers",
            "urls": [
                {
                    "title": "How Web Browsers Function ( video )",
                    "url": "https://www.youtube.com/embed/z0HN-fG6oT4"
                }
            ],
            "optionalUrls": [],
            "guidelinesForUrls": "Know the very fundamentals of how a browser works, the attached video resource starts with the very basics and later expalins what actually goes on under the hood when you visit a website on a browser",
            "knowledgeCheck": [
                {
                    "question": "How does a web browser work?",
                    "answer": "A web browser uses the Hypertext Transfer Protocol (HTTP) to request and receive web pages from web servers. It then renders the web pages using HTML, CSS, and JavaScript, and displays them to the user."
                },
                {
                    "question": "How do web browsers ensure security and privacy?",
                    "answer": "Web browsers use various techniques to ensure security and privacy, such as encryption, secure connections (HTTPS), pop-up blockers etc."
                }
            ]
        },
        {
            "title": "Full Stack Development",
            "urls": [
                {
                    "title": "Intro. to Front-end Development ( video )",
                    "url": "https://www.youtube.com/embed/WG5ikvJ2TKA"
                },
                {
                    "title": "Intro. to Back-end development ( video )",
                    "url": "https://www.youtube.com/embed/XBu54nfzxAQ"
                }
            ],
            "optionalUrls": [],
            "guidelinesForUrls": "Full stack development refers to the development of both the front-end (client-side) and back-end (server-side) portions of a web application. A full stack developer is someone who has the skills and knowledge to develop all aspects of a web application, from the user interface and client-side scripting to the server-side programming and database management.",
            "knowledgeCheck": [
                {
                    "question": "What is HTML?",
                    "answer": "HTML (Hypertext Markup Language) is the standard markup language used to create web pages. It defines the structure and content of a web page, including headings, paragraphs, images, links, and other elements. We will read more about it in upcoming sections."
                },
                {
                    "question": "What is CSS?",
                    "answer": "CSS (Cascading Style Sheets) is a style sheet language used to describe the presentation and layout of a web page. It allows developers to separate the presentation of a web page from its content, and apply styles such as fonts, colors, and layouts to HTML elements. We will read more about it in upcoming sections."
                },
                {
                    "question": "What is JavaScript?",
                    "answer": "JavaScript is a programming language used to create dynamic and interactive web applications. It allows developers to add behaviors and interactivity to HTML elements, and to interact with web APIs to create rich web experiences. We will read more about it in upcoming sections."
                },
                {
                    "question": "What is a database?",
                    "answer": "A database is a structured collection of data that can be stored, organized, and retrieved using software. Databases are commonly used in web applications to store and manage user data, application data, and other information."
                }
            ]
        },
        {
            "title": "HTML Basics",
            "urls": [
                {
                    "title": "Download Visual Studio Code",
                    "url": "https://code.visualstudio.com/download "
                },
                {
                    "title": "File Paths",
                    "url": "https://www.w3schools.com/html/html_filepaths.asp"
                },
                {
                    "title": "HTML to get started ( video )",
                    "url": "https://www.youtube.com/embed/HD13eq_Pmp8"
                },
                {
                    "title": "When to use id and class",
                    "url": "https://www.youtube.com/embed/SHIMUoAJHYU"
                },
                {
                    "title": "More HTML Fundamentals",
                    "url": "https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics"
                }
            ],
            "optionalUrls": [],
            "guidelinesForUrls": "The first resource in the list of resources in this section is a link to download a code-editor called \"Visual Studio Code\", you need to download and install it before following the tutorial video.",
            "exercise": "https://www.w3schools.com/quiztest/quiztest.asp?qtest=HTML",
            "knowledgeCheck": [
                {
                    "question": "What is the difference between HTML elements and HTML tags?",
                    "answer": "HTML elements are the building blocks of HTML pages, and they define the structure and content of a web page. An HTML element consists of an opening tag, a closing tag, and content between the tags, so, we use tags to build an element e.g. <div> This is the content of a div element which is enclosed inside opening and closing tags </div>"
                },
                {
                    "question": "What are self-closing HTML tags?",
                    "answer": "HTML tags that do not have a closing tag. Instead, they use a forward slash (/) immediately before the closing angle bracket (>) to indicate that the tag is self-contained and does not require a closing tag.  e.g. an Image tag: <img src=\"http://image_link\" />, Self-closing tags are typically used for elements that do not have any content, such as images, line breaks, or input fields."
                },
                {
                    "question": "What are attributes?",
                    "answer": "In HTML, attributes provide additional information about an element. Attributes are used to define characteristics and properties of an HTML element, such as the size, color, alignment, or behavior of the element. e.g. In '<a href=\"https://example.com\">Click here</a>',  the href attribute specifies the URL that the link should point to. The attribute name is href, and its value is \"https://example.com\""
                }
            ]
        },
        {
            "title": "CSS Basics",
            "urls": [
                {
                    "title": "Link CSS to HTML file",
                    "url": "https://www.youtube.com/embed/7IaqdnU44rQ"
                },
                {
                    "title": "Intro. to CSS ( video )",
                    "url": "https://www.youtube.com/embed/1PnVor36_40"
                },
                {
                    "title": "CSS Box Model ( video )",
                    "url": "https://www.youtube.com/embed/M1xEi_BBW1I"
                }
            ],
            "exercise": "https://www.w3schools.com/quiztest/quiztest.asp?qtest=CSS",
            "optionalUrls": [],
            "guidelinesForUrls": "CSS is used to give asthetics to the html elements asthetics like color, height, width, position etc.\nYou can write CSS inside the HTML file and you can write CSS in a separate file as well and then link the CSS file to the HTML file. Let's take a deeper dive!",
            "knowledgeCheck": [
                {
                    "question": "What is the difference between class and ID selectors in CSS?",
                    "answer": "Class selectors and ID selectors are both used to apply styles to HTML elements, but there are some differences between them. A class selector is used to apply a style to a group of elements that share the same class attribute, while an ID selector is used to apply a style to a single element that has a unique ID attribute. Additionally, class names can be reused across different elements, while ID names must be unique."
                },
                {
                    "question": "What is the box model in CSS and how does it work?",
                    "answer": "The box model in CSS refers to the way in which elements are rendered on a web page as rectangular boxes. Each box has content, padding, borders, and margins, which can all be styled using CSS. The content of the box refers to the actual text or images within the element, while the padding is the space between the content and the border. The border is a thin line that surrounds the element, and the margin is the space between the border and other elements on the page."
                }
            ]
        },
        {
            "title": "Javascript",
            "urls": [
                {
                    "title": "What is Javascript? ( video )",
                    "url": "https://www.youtube.com/embed/upDLs1sn7g4"
                },
                {
                    "title": "What are variables? ( video )",
                    "url": "https://www.youtube.com/embed/rxqBmi8Xwy4"
                },
                {
                    "title": "Data types in Javascript ( video )",
                    "url": "https://www.youtube.com/embed/808eYu9B9Yw"
                },
                {
                    "title": "Variables in Javascript ( video )",
                    "url": "https://www.youtube.com/embed/UGSKzzNb8K4"
                },
                {
                    "title": "Logical operators in Javascript",
                    "url": "https://www.youtube.com/embed/t28EjCGOoIk"
                },
                {
                    "title": "== vs === in javascript",
                    "url": "https://www.youtube.com/embed/C5ZVC4HHgIg"
                },
                {
                    "title": "Javascript array methods ( video ) - Important",
                    "url": "https://www.youtube.com/embed/OMoxLUxW7Wc"
                },
                {
                    "title": "Arrays ( video )",
                    "url": "https://www.youtube.com/embed/oigfaZ5ApsM"
                },
                {
                    "title": "Functions ( video )",
                    "url": "https://www.youtube.com/embed/N8ap4k_1QEQ"
                },
                {
                    "title": "Stack/Heap Allocation, Frames, Call Stacks, Recursion ( video )",
                    "url": "https://www.youtube.com/embed/03pp6cz8lWo"
                },
                {
                    "title": "Strings ( video )",
                    "url": "https://www.youtube.com/embed/09BwruU4kiY"
                },
                {
                    "title": "Javascript if else ( video )",
                    "url": "https://www.youtube.com/embed/IsG4Xd6LlsM"
                },
                {
                    "title": "switch ( video )",
                    "url": "https://www.youtube.com/embed/fM5qnyasUYI"
                },
                {
                    "title": "Loops ( video )",
                    "url": "https://www.youtube.com/embed/s9wW2PpJsmQ"
                },
                {
                    "title": "Javascript Objects ( video )",
                    "url": "https://www.youtube.com/embed/adp5-HFSD30"
                },
                {
                    "title": "The 'this' keyword ( video )",
                    "url": "https://www.youtube.com/embed/gvicrj31JOM"
                },
                {
                    "title": "Factory Function ( video )",
                    "url": "https://www.youtube.com/embed/jpegXpQpb3o"
                },
                {
                    "title": "Constructor Function ( video )",
                    "url": "https://www.youtube.com/embed/23AOrSN-wmI"
                },
                {
                    "title": "Getters and Setters ( video )",
                    "url": "https://www.youtube.com/embed/bl98dm7vJt0"
                },
                {
                    "title": "Value and Reference types ( video )",
                    "url": "https://www.youtube.com/embed/fD0t_DKREbE"
                },
                {
                    "title": "Variable Scope ( video )",
                    "url": "https://www.youtube.com/embed/iJKkZA215tQ"
                },
                {
                    "title": "let vs var vs const ( video )",
                    "url": "https://www.youtube.com/embed/XgSjoHgy3Rk"
                }
            ],
            "exercise": "https://www.w3schools.com/quiztest/quiztest.asp?qtest=JS",
            "optionalUrls": [],
            "guidelinesForUrls": "Learning Javascript may take the time it deserves, so there is a lot in here, let's begin, code along the tutorials!",
            "knowledgeCheck": []
        },
        {
            "title": "10 days of Javascript",
            "urls": [
                {
                    "title": "10 days of Javascript - Hackerrank",
                    "url": "https://www.hackerrank.com/domains/tutorials/10-days-of-javascript"
                },
                {
                    "title": "Solutions for the 10 days of Javascript problems (video playlist)",
                    "url": "https://www.youtube.com/watch?v=sHYlBUx2JcI&list=PL_-8xV0NOEOJA_xqb-HeOLsOnbRm79lNt"
                }
            ],
            "exercise": "https://javascriptquiz.com/",
            "optionalUrls": [],
            "guidelinesForUrls": "This is it, you may have to sign-up on the link attached in the resources and it is recommended that you do so, as it is free and the content is just great to learn problem solving using Javascript, you can start solving problems using javascript and anything new that you encounter, you may be able to figure your own way out of it via a simple google search! And the Exercise link attached in this seciton is a MUST too!",
            "knowledgeCheck": []
        },
        {
            "title": "Project 1",
            "urls": [
                {
                    "title": "Mark as completed",
                    "url": ""
                }
            ],
            "exercise": "https://www.youtube.com/embed/98dxv6JlbF0",
            "optionalUrls": [],
            "guidelinesForUrls": "Code along! In this video tutorial, you'll find it easy to focus on the code as the instructor doesn't speak in this. Also, whatever new you find in this video, google it, learn about it on your own, it will add a lot to the learning!",
            "knowledgeCheck": []
        },
        {
            "title": "React.js",
            "urls": [
                {
                    "title": "A quick introduction ( video )",
                    "url": "https://www.youtube.com/embed/N3AkSS5hXMA"
                },
                {
                    "title": "Do you know enough Javascript to start working with React.js?",
                    "url": "https://www.youtube.com/embed/JR9wsVYp8RQ"
                },
                {
                    "title": "Download & Install Node - Mandatory",
                    "url": "https://nodejs.org/en/"
                },
                {
                    "title": "9 hours of React.js? ( video )",
                    "url": "https://www.youtube.com/embed/RVFAyFWO4go"
                },
                {
                    "title": "React.js documentation",
                    "url": "https://reactjs.org/"
                }
            ],
            "exercise": "https://www.w3schools.com/quiztest/quiztest.asp?qtest=REACT0",
            "optionalUrls": [],
            "guidelinesForUrls": "Finally! You have learnt enough to get started with learning react.js which is the most in-demand skill and a javascript library that makes the lives of front-end developers a lot easier and we will see how,let's begin!",
            "knowledgeCheck": []
        },
        {
            "title": "Integrating APIs in front-end",
            "urls": [
                {
                    "title": "What is JSON data? ( video )",
                    "url": "https://www.youtube.com/embed/iADhChRriM"
                },
                {
                    "title": "Fetching data from an API endpoint",
                    "url": "https://www.freecodecamp.org/news/how-to-consume-rest-apis-in-react"
                }
            ],
            "exercise": "https://javascriptquiz.com/",
            "optionalUrls": [],
            "guidelinesForUrls": "This is it, you may have to sign-up on the link attached in the resources and it is recommended that you do so, as it is free and the content is just great to learn problem solving using Javascript, you can start solving problems using javascript and anything new that you encounter, you may be able to figure your own way out of it via a simple google search! And the Exercise link attached in this seciton is a MUST too!",
            "knowledgeCheck": [
                {
                    "question": "How can I fetch data from an API in ReactJS?",
                    "answer": "You can use Javascript's fetch API or Axios library to fetch data from an API in ReactJS. "
                },
                {
                    "question": "How can I pass API data to a component in ReactJS?",
                    "answer": "You can pass API data to a component in ReactJS by using state or props."
                },
                {
                    "question": "How can I handle API errors in ReactJS?",
                    "answer": "You can handle API errors in ReactJS by using the catch() method or by wrapping the API call in a try-catch block."
                }
            ]
        },
        {
            "title": "Asynchronous Javascript",
            "urls": [
                {
                    "title": "Asynchronous Vs Synchronous ( video )",
                    "url": "https://www.youtube.com/embed/wYRw8f-wrco"
                },
                {
                    "title": "What is First Class Citizen in JavaScript ?",
                    "url": "https://www.geeksforgeeks.org/what-is-first-class-citizen-in-javascript/"
                },
                {
                    "title": "Callbacks in Javascript ( video )",
                    "url": "https://www.youtube.com/embed/kz_vwAF4NHI"
                },
                {
                    "title": "Callbacks, Promises, Async Await ( video )",
                    "url": "https://www.youtube.com/embed/VmQ6dHvnKIM"
                },
                {
                    "title": "Asynchronous JavaScript, Task Queue & Event Loop ( video )",
                    "url": "https://www.youtube.com/embed/28AXSTCpsyU"
                }
            ],
            "optionalUrls": [],
            "guidelinesForUrls": "Asynchronous programming in JavaScript enables non-blocking execution of code, allowing the program to continue running while waiting for I/O operations or other tasks to complete. It relies on the event loop mechanism to handle callbacks and promises, making it suitable for building responsive and scalable web applications. Asynchronous programming is a core concept in modern JavaScript development, utilized in popular frameworks and libraries such as Node.js, React, and Angular. Let's dive deeper!",
            "knowledgeCheck": [
                {
                    "question": "What are some common techniques used in asynchronous programming?",
                    "answer": "1.Callbacks 2.Promises 3.Async/await 4.Reactive programming."
                }
            ]
        },
        {
            "title": "Prepare for Interviews",
            "urls": [
                {
                    "title": "Coding Interview Preparation - Hackerrank - One Month Preparation Kit",
                    "url": "https://www.hackerrank.com/interview/preparation-kits/one-month-preparation-kit/one-month-week-one/challenges"
                },
                {
                    "title": "React.js Interview Questions",
                    "url": "https://www.simplilearn.com/tutorials/reactjs-tutorial/reactjs-interview-questions"
                },
                {
                    "title": "More React.js Interview Questions",
                    "url": "https://www.freecodecamp.org/news/react-interview-questions-and-answers/"
                },
                {
                    "title": "HTML interview questions ( video )",
                    "url": "https://www.youtube.com/embed/x7xwC_yHxNk"
                },
                {
                    "title": "CSS interview questions ( video )",
                    "url": "https://www.youtube.com/embed/S5_1aDUeDok"
                },
                {
                    "title": "General front-end interview question bank",
                    "url": "https://www.javatpoint.com/front-end-developer-interview-questions"
                },
                {
                    "title": "CSS interview questions ( video )",
                    "url": "https://www.youtube.com/embed/S5_1aDUeDok"
                }
            ],
            "exercise": "https://www.w3schools.com/quiztest/quiztest.asp?qtest=REACT0",
            "optionalUrls": [],
            "guidelinesForUrls": "Finally! You have learnt enough to get started with learning react.js which is the most in-demand skill and a javascript library that makes the lives of front-end developers a lot easier and we will see how,let's begin!",
            "knowledgeCheck": []
        },
        {
            "title": "More Resources",
            "urls": [
                {
                    "title": "Hackerrank - For practice",
                    "url": "https://www.hackerrank.com/"
                },
                {
                    "title": "Developer.Mozilla",
                    "url": "https://developer.mozilla.org/en-US/"
                },
                {
                    "title": "Edx - Free online courses",
                    "url": "https://www.edx.org/"
                }
            ],
            "optionalUrls": [],
            "guidelinesForUrls": "These resources can be used to further refine your learnings from this curriculum, check them out.",
            "knowledgeCheck": []
        }
    ]
}